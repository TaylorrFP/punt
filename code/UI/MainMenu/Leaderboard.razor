@using Sandbox
@using Sandbox.UI
@inherits Panel
@namespace Facepunch.UI
@using System
@using System.Threading.Tasks
@using System.Collections.Generic

@implements INavigatorPage

<root class="mainmenu">

    <title>Punt!</title>

    <!-- Leaderboard Sections -->
    <div class="leaderboards">
        <div class="leaderboard-section solo-leaderboard">
            <h2>Solo</h2>
            <div class="leaderboard-entries">
                @if (soloboard != null)
                {
                    @foreach (var entry in soloboard.Entries)
                    {
                        bool isLocalPlayer = entry.DisplayName == Connection.Local.DisplayName;
                        <div class="leaderboard-entry @(isLocalPlayer ? "local-player" : "")">
                            @($"{entry.Rank}: {entry.DisplayName} - {entry.Value + 1200}")
                        </div>
                    }
                }
                else
                {
                    <div class="leaderboard-entry">Loading...</div>
                }
            </div>
        </div>

        <div class="leaderboard-section duo-leaderboard">
            <h2>Duo</h2>
            <div class="leaderboard-entries">
                @if (duoboard != null)
                {
                    @foreach (var entry in duoboard.Entries)
                    {
                        bool isLocalPlayer = entry.DisplayName == Connection.Local.DisplayName;
                        <div class="leaderboard-entry @(isLocalPlayer ? "local-player" : "")">
                            @($"{entry.Rank}: {entry.DisplayName} - {entry.Value + 1200}")
                        </div>
                    }
                }
                else
                {
                    <div class="leaderboard-entry">Loading...</div>
                }
            </div>
        </div>
    </div>

    <div class="options">
        <div class="button" onclick=@(()=>FetchLeaderboards())>
            Refresh
        </div>
        <a class="button" href="">Back</a>
    </div>

</root>

@code
{
    Sandbox.Services.Leaderboards.Board2 soloboard;
    Sandbox.Services.Leaderboards.Board2 duoboard;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (firstTime)
        {
            FetchLeaderboards();
        }
    }

    protected async void FetchLeaderboards()
    {
        Log.Info("Fetching Leaderboards...");

        soloboard = Sandbox.Services.Leaderboards.GetFromStat("fptaylor.punt", "solo_q_points");
        soloboard.SetAggregationLast();
        soloboard.SetSortDescending();
        soloboard.FilterByMonth();
        soloboard.CenterOnMe();
        soloboard.MaxEntries = 10;
        await soloboard.Refresh();

        duoboard = Sandbox.Services.Leaderboards.GetFromStat("fptaylor.punt", "duo_q_points");
        duoboard.SetAggregationLast();
        duoboard.SetSortDescending();
        duoboard.FilterByMonth();
        duoboard.CenterOnMe();
        duoboard.MaxEntries = 10;
        await duoboard.Refresh();

        Log.Info("Leaderboards Fetched Successfully!");
    }

    protected override int BuildHash() => System.HashCode.Combine(soloboard, duoboard);
}
